<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.duoyi.dao.GoodsGeneratorMapper">
	<resultMap id="BaseResultMap" type="com.duoyi.model.po.GoodsGenerator">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="price" jdbcType="REAL" property="price" />
		<result column="describe" jdbcType="VARCHAR" property="describe" />
		<result column="result" jdbcType="INTEGER" property="result" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, user_id, `name`, price, `describe`, result, time
	</sql>
	<select id="selectByExample" parameterType="com.duoyi.model.po.GoodsGeneratorCriteria"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from goods
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from goods
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from goods
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.duoyi.model.po.GoodsGeneratorCriteria">
		delete from goods
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.duoyi.model.po.GoodsGenerator"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into goods (id, user_id, `name`,
		price, `describe`,
		time)
		values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{price,jdbcType=REAL}, #{describe,jdbcType=VARCHAR},
		#{time,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.duoyi.model.po.GoodsGenerator"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into goods
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="name != null">
				`name`,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="describe != null">
				`describe`,
			</if>
			<if test="result != null">
				result,
			</if>
			<if test="time != null">
				time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=REAL},
			</if>
			<if test="describe != null">
				#{describe,jdbcType=VARCHAR},
			</if>
			<if test="result != null">
				#{result,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.duoyi.model.po.GoodsGeneratorCriteria"
		resultType="java.lang.Long">
		select count(*) from goods
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update goods
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=REAL},
			</if>
			<if test="record.describe != null">
				describe = #{record.describe,jdbcType=VARCHAR},
			</if>
			<if test="record.result != null">
				result = #{record.result,jdbcType=INTEGER},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=TIMESTAMP},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update goods
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=REAL},
		describe = #{record.describe,jdbcType=VARCHAR},
		result = #{record.result,jdbcType=INTEGER},
		time = #{record.time,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.duoyi.model.po.GoodsGenerator">
		update goods
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				`name` = #{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=REAL},
			</if>
			<if test="describe != null">
				`describe` = #{describe,jdbcType=VARCHAR},
			</if>
			<if test="result != null">
				result = #{result,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.duoyi.model.po.GoodsGenerator">
		update goods
		set user_id = #{userId,jdbcType=INTEGER},
		name = #{name,jdbcType=VARCHAR},
		price = #{price,jdbcType=REAL},
		describe = #{describe,jdbcType=VARCHAR},
		result = #{result,jdbcType=INTEGER},
		time = #{time,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="getAll" resultMap="BaseResultMap">
		select * from goods
	</select>
	<select id="getAllByUserid" resultMap="BaseResultMap">
		select * from goods where user_id = #{userid}
	</select>

	<select id="searchGoods" resultMap="BaseResultMap"
		parameterType="String">
		select * from goods
		<where>
			<if test="name != null and name != ''">
				name LIKE '%${name}%'
			</if>
		</where>
	</select>

	<update id="updateOrderForMoney" parameterType="int">
		update goods set result = 1 where id = #{id}
	</update>
</mapper>