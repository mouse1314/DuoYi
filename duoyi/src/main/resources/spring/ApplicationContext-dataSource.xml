<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd     
        http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 定义一个druid连接池数据源 -->    
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"> 
        <property name="driverClassName" value="${driverClassName}" /> 
        <property name="url" value="${url}" /> 
        <property name="username" value="${jdbc.username}" /> 
        <property name="password" value="${password}" /> 
        
        <!-- 配置初始化大小、最小、最大 --> 
        <property name="initialSize" value="${initialSize}" /> 
        <property name="minIdle" value="${minIdle}" /> 
        <property name="maxActive" value="${maxIdle}" />

        <!-- 配置获取连接等待超时的时间 --> 
        <property name="maxWait" value="${maxWait}" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --> 
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --> 
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />

        <property name="testWhileIdle" value="${testWhileIdle}" />

        <!-- 这里建议配置为TRUE，防止取到的连接不可用 --> 
        <property name="testOnBorrow" value="${testOnBorrow}" /> 
        <property name="testOnReturn" value="${testOnReturn}" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 --> 
        <property name="poolPreparedStatements" value="true" /> 
        <property name="maxPoolPreparedStatementPerConnectionSize" 
            value="${maxOpenPreparedStatements}" />
            
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="${removeAbandoned}" />
        
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" />
        
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="${logAbandoned}" />    
        
        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="validationQuery" value="${validationQuery}" />  
        <property name="filters" value="stat" /> 
    </bean>
    
    <!-- 定义Mybatis的SqlSession工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
        p:dataSource-ref="dataSource"
        p:mapperLocations="classpath:mapper/*.xml"
    />
    
    <!-- Mybatis自动扫描Dao接口包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="com.duoyi.dao"
        p:sqlSessionFactoryBeanName="sqlSessionFactory"
    />
    
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" 
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="dataSource"
    />
    
    <!--  配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    
    

</beans>